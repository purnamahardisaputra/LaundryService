/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.awt.event.ItemEvent;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import kelas.Database;

/**
 *
 * @author Purnama Hardi Saputra
 */
public class Transaction extends javax.swing.JFrame {
    private int x;
    private int y;
    private String id = null;
    private String customer = null;
    private double prices = 0;
    private double items = 0;
    private String typeService = "";
    private String typeDay = null;
    private String typeLaundry = null;
    private String typePayment = null;
    private double type = 0;
    private String status;
    /**
     * Creates new form Transaction
     */
    public Transaction() {
        initComponents();
        
        this.setLocationRelativeTo(null); // menengahkan screen
        this.setResizable(false); // mencegah bingkai berubah ukuran
        
        this.status = "Pending";
        
        // mendapatkan 10 karakter unik dan memasukkannya ke id
        UUID uuid = UUID.randomUUID();
        String uniqueId = uuid.toString();
        transactionTxt.setText(uniqueId.substring(0, 10));
        
        itemTxt.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            //apabila menginputkan sesuatu di jumlah item
            public void insertUpdate(DocumentEvent e) {
                totalPrice();
            }
            
            @Override
            //apabila menghapus sesuatu di jumlah item
            public void removeUpdate(DocumentEvent e) {
                totalPrice();
            }

            @Override
            //apabila mengubah sesuatu di jumlah item
            public void changedUpdate(DocumentEvent e) {
                totalPrice();
            }
        });
    }
    
    // mengembalikan nilai id dalam bentuk string
    public String getId(){
        return this.id;
    }
    
    // mengembalikan nilai nama konsumen dalam bentuk string
    public String getCustomer(){
        return this.customer;
    }
    
    // mengembalikan nilai jumlah item dalam bentuk double
    public double getItems(){
        return this.items;
    }
    
    // mengembalikan nilai harga dalam bentuk double
    public double getPrice(){
        return this.prices;
    }
    
    // mengembalikan nilai tipe jasa dalam bentuk string
    public String getTypeService(){
        return this.typeService;
    }
    
    // mengembalikan nilai tipe hari dalam bentuk string
    public String getTypeDay(){
        return this.typeDay;
    }
    
    // mengembalikan nilai tipe laundry dalam bentuk string
    public String getTypeLaundry(){
        return this.typeLaundry;
    }
    
    // mengembalikan nilai tipe pembayaran dalam bentuk string
    public String getTypePayment(){
        return this.typePayment;
    }
    
    // mengembalikan nilai status dalam bentuk string
    public String getStatus(){
        return this.status;
    }
    
    // menghitung total harga keseluruhan
    public void totalPrice(){
        if(!itemTxt.getText().isEmpty()){
            if(itemTxt.getText().matches(".*\\d.*") || itemTxt.getText().contains(".")){
                this.items = Double.parseDouble(itemTxt.getText());
                this.prices = this.items * this.type;
            } else if(itemTxt.getText().matches("[a-zA-Z]+")){
                JOptionPane.showMessageDialog(null, "Invalid type", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            this.prices = this.type;
        }
        if("Cash".equals(this.typePayment)){
            this.prices = Math.ceil(this.prices / 100) * 100;
        }
        priceTxt.setText(String.valueOf(this.prices));
    }
    
    // mengecek apakah string mengandung nilai numerik
    public boolean isNumeric(String str) {
        try {
            Integer.parseInt(str);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        priceTxt = new javax.swing.JLabel();
        transactionBtn = new javax.swing.JLabel();
        minimizeBtn = new javax.swing.JLabel();
        closeBtn = new javax.swing.JLabel();
        checkoutBtn = new javax.swing.JLabel();
        accountBtn = new javax.swing.JLabel();
        trackingBtn = new javax.swing.JLabel();
        inventoryBtn = new javax.swing.JLabel();
        dashboardBtn = new javax.swing.JLabel();
        cashRbtn = new javax.swing.JRadioButton();
        qrisRbtn = new javax.swing.JRadioButton();
        unitRbtn = new javax.swing.JRadioButton();
        kilosRbtn = new javax.swing.JRadioButton();
        nextRbtn = new javax.swing.JRadioButton();
        sameRbtn = new javax.swing.JRadioButton();
        ironCbx = new javax.swing.JCheckBox();
        washCbx = new javax.swing.JCheckBox();
        dryCbx = new javax.swing.JCheckBox();
        nameTxt = new javax.swing.JTextField();
        transactionTxt = new javax.swing.JTextField();
        itemTxt = new javax.swing.JTextField();
        panel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(priceTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 410, 280, 30));
        getContentPane().add(transactionBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 180, 50));

        minimizeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeBtnMouseClicked(evt);
            }
        });
        getContentPane().add(minimizeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(875, 3, 30, 30));

        closeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeBtnMouseClicked(evt);
            }
        });
        getContentPane().add(closeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(923, 3, 30, 30));

        checkoutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkoutBtnMouseClicked(evt);
            }
        });
        getContentPane().add(checkoutBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 478, 140, 50));

        accountBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accountBtnMouseClicked(evt);
            }
        });
        getContentPane().add(accountBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 50, 50));

        trackingBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trackingBtnMouseClicked(evt);
            }
        });
        getContentPane().add(trackingBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 210, 50));

        inventoryBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inventoryBtnMouseClicked(evt);
            }
        });
        getContentPane().add(inventoryBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 150, 50));

        dashboardBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardBtnMouseClicked(evt);
            }
        });
        getContentPane().add(dashboardBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 170, 50));

        cashRbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashRbtnActionPerformed(evt);
            }
        });
        getContentPane().add(cashRbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 450, -1, -1));

        qrisRbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qrisRbtnActionPerformed(evt);
            }
        });
        getContentPane().add(qrisRbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 425, -1, -1));

        unitRbtn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                unitRbtnItemStateChanged(evt);
            }
        });
        unitRbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitRbtnActionPerformed(evt);
            }
        });
        getContentPane().add(unitRbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 375, -1, -1));

        kilosRbtn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                kilosRbtnItemStateChanged(evt);
            }
        });
        kilosRbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kilosRbtnActionPerformed(evt);
            }
        });
        getContentPane().add(kilosRbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 350, -1, -1));

        nextRbtn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                nextRbtnItemStateChanged(evt);
            }
        });
        nextRbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextRbtnActionPerformed(evt);
            }
        });
        getContentPane().add(nextRbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 290, -1, -1));

        sameRbtn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sameRbtnItemStateChanged(evt);
            }
        });
        sameRbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sameRbtnActionPerformed(evt);
            }
        });
        getContentPane().add(sameRbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 265, -1, -1));

        ironCbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ironCbxItemStateChanged(evt);
            }
        });
        getContentPane().add(ironCbx, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 215, -1, -1));

        washCbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                washCbxItemStateChanged(evt);
            }
        });
        getContentPane().add(washCbx, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 160, -1, -1));

        dryCbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dryCbxItemStateChanged(evt);
            }
        });
        getContentPane().add(dryCbx, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 185, -1, -1));
        getContentPane().add(nameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 250, 280, 40));
        getContentPane().add(transactionTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 170, 280, 40));
        getContentPane().add(itemTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 330, 280, 40));

        panel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Transaction.png"))); // NOI18N
        panel.setAlignmentY(0.3F);
        panel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelMouseDragged(evt);
            }
        });
        panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelMousePressed(evt);
            }
        });
        getContentPane().add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBtnMouseClicked
        // menclose aplikasi
        System.exit(0);
    }//GEN-LAST:event_closeBtnMouseClicked

    private void minimizeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeBtnMouseClicked
        // meminimalkan tampilan aplikasi
        this.setExtendedState(Login.ICONIFIED);
    }//GEN-LAST:event_minimizeBtnMouseClicked

    private void dashboardBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardBtnMouseClicked
        // mengarahkan ke halaman Dashboard dan menghilangkan halaman ini
        Dashboard dashboard = new Dashboard();
        dashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_dashboardBtnMouseClicked

    private void inventoryBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventoryBtnMouseClicked
        // mengarahkan ke halaman Inventory dan menghilangkan halaman ini
        Inventory inventory = new Inventory();
        inventory.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_inventoryBtnMouseClicked

    private void trackingBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trackingBtnMouseClicked
        // mengarahkan ke halaman TrackingStatus dan menghilangkan halaman ini
        TrackingStatus trackingStatus = new TrackingStatus();
        trackingStatus.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_trackingBtnMouseClicked

    private void accountBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountBtnMouseClicked
        // mengarahkan ke halaman Account dan menghilangkan halaman ini
        Account account = new Account();
        account.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_accountBtnMouseClicked

    private void qrisRbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qrisRbtnActionPerformed
        // apabila qris radio button dijalankan
        cashRbtn.setSelected(false);
        this.typePayment = "QRIS";
        totalPrice();
    }//GEN-LAST:event_qrisRbtnActionPerformed

    private void cashRbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashRbtnActionPerformed
        // apabila cash radio button dijalankan
        qrisRbtn.setSelected(false);
        this.typePayment = "Cash";
        totalPrice();
    }//GEN-LAST:event_cashRbtnActionPerformed

    private void checkoutBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkoutBtnMouseClicked
        // memasukkan data yang dicantumkan di kelas ini ke database jika berhasil
        
        this.id = transactionTxt.getText();
        this.customer = nameTxt.getText();
        String item = itemTxt.getText();
        Database database = new Database();
        
        System.out.println(typeService);
        if(this.id != null && !this.id.isEmpty() && this.customer != null && !this.customer.isEmpty() && item != null && 
                !item.isEmpty() && this.typeService != null && !this.typeService.isEmpty() && this.typeDay != null && 
                !this.typeDay.isEmpty() && this.typeLaundry != null && !this.typeLaundry.isEmpty() && this.typePayment != null && 
                !this.typePayment.isEmpty()){
            if (isNumeric(this.customer)) {
                JOptionPane.showMessageDialog(null, "Invalid type", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                int jawab = JOptionPane.showOptionDialog(this, "Are you sure want to checkout?", "Payment", JOptionPane.YES_NO_OPTION, 
                        JOptionPane.QUESTION_MESSAGE, null, null, null);
                if (jawab == JOptionPane.YES_OPTION){
                    this.typeService = this.typeService.isEmpty() ? "" : this.typeService.substring(0, this.typeService.length() - 2);
                    database.createTransaction(this);
                    this.dispose();
                }
            }
        } else{
            JOptionPane.showMessageDialog(null, "Please input in all data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_checkoutBtnMouseClicked

    private void panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMousePressed
        // mendapatkan lokasi x dan y dari screen
        this.x = evt.getX();
        this.y = evt.getY();
    }//GEN-LAST:event_panelMousePressed

    private void panelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseDragged
        // untuk mengubah lokasi x dan y dari screen agar dapat digerakkan
        int x1 = evt.getXOnScreen();
        int y1 = evt.getYOnScreen();
        
        this.setLocation(x1-x, y1-y);
    }//GEN-LAST:event_panelMouseDragged

    private void washCbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_washCbxItemStateChanged
        // apabila wash checkbox berubah
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.type += 3000;
            this.typeService += "Wash, ";
        } else {
            this.type -= 3000;
            this.typeService = this.typeService.replace("Wash, ", "");
        }
        totalPrice();
    }//GEN-LAST:event_washCbxItemStateChanged

    private void dryCbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dryCbxItemStateChanged
        // apabila dry checkbox berubah
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.type += 3000;
            this.typeService += "Dry, ";
        } else {
            this.type -= 3000;
            this.typeService = this.typeService.replace("Dry, ", "");
        }
        totalPrice();
    }//GEN-LAST:event_dryCbxItemStateChanged

    private void ironCbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ironCbxItemStateChanged
        // apabila iron checkbox berubah
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.type += 3000;
            this.typeService += "Iron, ";
        } else {
            this.type -= 3000;
            this.typeService = this.typeService.replace("Iron, ", "");
        }
        totalPrice();
    }//GEN-LAST:event_ironCbxItemStateChanged

    private void sameRbtnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sameRbtnItemStateChanged
        // apabila same radio button berubah
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.type += 6000;
        } else {
            this.type -= 6000;
        }
        totalPrice();
    }//GEN-LAST:event_sameRbtnItemStateChanged

    private void nextRbtnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_nextRbtnItemStateChanged
        // apabila next radio button checkbox berubah
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.type += 0;
        } else {
            this.type -= 0;
        }
        totalPrice();
    }//GEN-LAST:event_nextRbtnItemStateChanged

    private void kilosRbtnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_kilosRbtnItemStateChanged
        // apabila kilos radio button berubah
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.type *= 2;
        } else {
            this.type /= 2;
        }
        totalPrice();
    }//GEN-LAST:event_kilosRbtnItemStateChanged

    private void unitRbtnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_unitRbtnItemStateChanged
        // apabila unit radio button berubah
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            this.type /= 2;
        } else {
            type *= 2;
        }
        totalPrice();
    }//GEN-LAST:event_unitRbtnItemStateChanged

    private void sameRbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sameRbtnActionPerformed
        // apabila same radio button dijalankan
        nextRbtn.setSelected(false);
        this.typeDay = "Same Day";
    }//GEN-LAST:event_sameRbtnActionPerformed

    private void nextRbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextRbtnActionPerformed
        // apabila next radio button dijalankan
        sameRbtn.setSelected(false);
        this.typeDay = "Next Day";
        
    }//GEN-LAST:event_nextRbtnActionPerformed

    private void kilosRbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kilosRbtnActionPerformed
        // apabila kilos radio button dijalankan
        unitRbtn.setSelected(false);
        this.typeLaundry = "per Kilos";
    }//GEN-LAST:event_kilosRbtnActionPerformed

    private void unitRbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitRbtnActionPerformed
        // apabila unit radio button dijalankan
        kilosRbtn.setSelected(false);
        this.typeLaundry = "per Unit";
    }//GEN-LAST:event_unitRbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transaction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accountBtn;
    private javax.swing.JRadioButton cashRbtn;
    private javax.swing.JLabel checkoutBtn;
    private javax.swing.JLabel closeBtn;
    private javax.swing.JLabel dashboardBtn;
    private javax.swing.JCheckBox dryCbx;
    private javax.swing.JLabel inventoryBtn;
    private javax.swing.JCheckBox ironCbx;
    private javax.swing.JTextField itemTxt;
    private javax.swing.JRadioButton kilosRbtn;
    private javax.swing.JLabel minimizeBtn;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JRadioButton nextRbtn;
    private javax.swing.JLabel panel;
    private javax.swing.JLabel priceTxt;
    private javax.swing.JRadioButton qrisRbtn;
    private javax.swing.JRadioButton sameRbtn;
    private javax.swing.JLabel trackingBtn;
    private javax.swing.JLabel transactionBtn;
    private javax.swing.JTextField transactionTxt;
    private javax.swing.JRadioButton unitRbtn;
    private javax.swing.JCheckBox washCbx;
    // End of variables declaration//GEN-END:variables
}
